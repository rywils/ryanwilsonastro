---
import { Moon, Sun } from "@lucide/astro";
import { Button } from "@/components/ui/Button";
---

<Button variant="ghost" size="icon" id="themeToggle" className="hidden lg:flex">
  <Sun id="sunIcon" class="size-6" />
  <Moon id="moonIcon" class="size-5 hidden" />
  <span class="sr-only">Toggle theme</span>
</Button>

<script is:inline>
  const setInitialTheme = () => {
    const prefersDark = window.matchMedia(
      "(prefers-color-scheme: dark)",
    ).matches;
    const storedTheme = localStorage?.getItem("theme");
    const isDark = storedTheme ? storedTheme === "dark" : prefersDark;
    document.documentElement.classList.toggle("dark", isDark);
    updateIcons(isDark);
  };

  const observeThemeChanges = () => {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
      updateIcons(isDark);
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  };

  const updateIcons = (isDark) => {
    const sunIcon = document.getElementById("sunIcon");
    const moonIcon = document.getElementById("moonIcon");
    if (sunIcon && moonIcon) {
      sunIcon.style.display = isDark ? "none" : "inline";
      moonIcon.style.display = isDark ? "inline" : "none";
    }
  };

  const setupToggleButton = () => {
    const button = document.getElementById("themeToggle");
    if (!button) return;

    button.addEventListener("click", () => {
      const isDark = document.documentElement.classList.toggle("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
      updateIcons(isDark);
    });
  };

  setInitialTheme();
  observeThemeChanges();
  setupToggleButton();
</script>
